{"version":3,"file":"static/js/286.8e9f66bc.chunk.js","mappings":"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","sources":["components/Loader/Loader.styled.jsx","components/Loader/Loader.jsx","components/SearchForm/SearchForm.styled.jsx","components/DepartmentsForm/DepartmentsForm.styled.jsx","components/DepartmentsForm/DepartmentsForm.jsx","components/DepartmentsListResult/DepartmentsListResult.styled.jsx","components/DepartmentsListResult/DepartmentsListResult.jsx","pages/DepartmentList/DepartmentList.jsx","redux/selectors.js"],"sourcesContent":["import styled from '@emotion/styled';\r\n\r\nexport const Spinner = styled.div`\r\n  position: fixed;\r\n  top: 0;\r\n  right: 0;\r\n  width: 100vw;\r\n  height: 100vh;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  backdrop-filter: invert(15%);\r\n`;\r\n","import { Circles } from 'react-loader-spinner';\r\nimport { Spinner } from 'components/Loader/Loader.styled';\r\nexport const Loader = () => {\r\n  return (\r\n    <Spinner>\r\n      <Circles\r\n        height=\"80\"\r\n        width=\"80\"\r\n        color=\"#ae0000\"\r\n        ariaLabel=\"circles-loading\"\r\n        wrapperStyle={{}}\r\n        wrapperClass=\"\"\r\n        visible={true}\r\n      />\r\n    </Spinner>\r\n  );\r\n};\r\n","import styled from '@emotion/styled';\r\nimport { Form, Field, ErrorMessage } from 'formik';\r\n\r\nexport const FormEl = styled(Form)`\r\n  display: flex;\r\n  align-items: center;\r\n  flex-direction: column;\r\n  margin-top: 20px;\r\n\r\n  @media screen and (min-width: 900px) {\r\n    flex-direction: row;\r\n    justify-content: center;\r\n    align-items: flex-start;\r\n  }\r\n`;\r\n\r\nexport const InputWrapper = styled.div`\r\n  min-height: 74px;\r\n  display: flex;\r\n  justify-content: flex-start;\r\n  align-items: center;\r\n  flex-direction: column;\r\n`;\r\n\r\nexport const InputEl = styled(Field)`\r\n  font-size: 16px;\r\n  width: 250px;\r\n  height: 20px;\r\n  padding: 5px;\r\n  border-radius: 5px;\r\n  outline-color: #bb3d3d;\r\n  border-color: #ab0a0a;\r\n  font-weight: 700;\r\n  outline: none;\r\n\r\n  @media screen and (min-width: 900px) {\r\n    height: 26px;\r\n    margin-bottom: 4px;\r\n  }\r\n`;\r\n\r\nexport const SubmitButton = styled.button`\r\n  width: 150px;\r\n  height: 40px;\r\n  background-color: #5d5e5e;\r\n  border: none;\r\n  border-radius: 5px;\r\n  font-size: 14px;\r\n  font-weight: 700;\r\n  cursor: pointer;\r\n  color: #ffffff;\r\n\r\n  padding: 5px;\r\n  transition: all 0.3s linear;\r\n\r\n  &:hover,\r\n  &:focus {\r\n    background-color: #b11b1b;\r\n  }\r\n`;\r\n\r\nexport const Error = styled(ErrorMessage)`\r\n  width: 300px;\r\n  text-align: center;\r\n  color: red;\r\n\r\n  font-weight: 500;\r\n  font-size: 12px;\r\n`;\r\n\r\nexport const InfoError = styled.div`\r\n  width: 300px;\r\n  text-align: center;\r\n\r\n  margin-bottom: 1px;\r\n  font-weight: 500;\r\n  font-size: 12px;\r\n  color: ${props => {\r\n    return props.error ? 'red' : 'transparent';\r\n  }};\r\n`;\r\n","import styled from '@emotion/styled';\r\nimport { Field, ErrorMessage } from 'formik';\r\n\r\nexport const InputEl = styled(Field)`\r\n  font-size: 16px;\r\n  width: 250px;\r\n  height: 20px;\r\n  padding: 5px;\r\n  border-radius: 5px;\r\n  outline-color: #bb3d3d;\r\n  border-color: #ab0a0a;\r\n  font-weight: 700;\r\n  outline: none;\r\n\r\n  @media screen and (min-width: 900px) {\r\n    height: 26px;\r\n    margin-right: 20px;\r\n    margin-bottom: 4px;\r\n  }\r\n`;\r\n\r\nexport const ErrorMessageDepartment = styled(ErrorMessage)`\r\n  width: 300px;\r\n  text-align: center;\r\n  color: red;\r\n  font-weight: 500;\r\n  font-size: 12px;\r\n`;\r\n","import { Formik } from 'formik';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport * as yup from 'yup';\r\n\r\nimport { fetchDepartments } from 'redux/operations';\r\n\r\nimport {\r\n  FormEl,\r\n  SubmitButton,\r\n  InputWrapper,\r\n} from 'components/SearchForm/SearchForm.styled';\r\n\r\nimport {\r\n  InputEl,\r\n  ErrorMessageDepartment,\r\n} from 'components/DepartmentsForm/DepartmentsForm.styled';\r\nimport { selectCity, selectPage } from 'redux/selectors';\r\nimport { clearDepartmentsList, updateCity } from 'redux/slice';\r\nimport { useEffect } from 'react';\r\n\r\nconst schema = yup.object().shape({\r\n  cityName: yup\r\n    .string()\r\n    .min(3, 'Мінімум 3 символа')\r\n    .max(30, 'Максимум 25 символів')\r\n    .matches(\r\n      /^[А-ЩЬЮЯҐЄІЇ][а-щьюяґєії']*(-[А-ЩЬЮЯҐЄІЇ][а-щьюяґєії']+)*( [А-ЩЬЮЯҐЄІЇ][а-щьюяґєії']+)*$/,\r\n      'Введіть назву літерами українського алфавіту з великої букви'\r\n    )\r\n    .required(\"Поле обов'язкове для заповнення\"),\r\n});\r\n\r\nconst initialValues = {\r\n  cityName: '',\r\n};\r\n\r\nexport const DepartmentsForm = () => {\r\n  const dispatch = useDispatch();\r\n  const page = useSelector(selectPage);\r\n  const city = useSelector(selectCity);\r\n\r\n  useEffect(() => {\r\n    if (city) {\r\n      dispatch(fetchDepartments({ city, page }));\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [city, page]);\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      dispatch(updateCity(''));\r\n      dispatch(clearDepartmentsList());\r\n    };\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  const handleSubmit = values => {\r\n    dispatch(updateCity(values.cityName));\r\n  };\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={initialValues}\r\n      validationSchema={schema}\r\n      onSubmit={handleSubmit}\r\n    >\r\n      <FormEl>\r\n        <InputWrapper>\r\n          <InputEl\r\n            type=\"text\"\r\n            name=\"cityName\"\r\n            placeholder=\"Введіть назву міста\"\r\n          />\r\n          <ErrorMessageDepartment name=\"cityName\" component=\"div\" />\r\n        </InputWrapper>\r\n        <SubmitButton type=\"submit\">Шукати відділення</SubmitButton>\r\n      </FormEl>\r\n    </Formik>\r\n  );\r\n};\r\n","import styled from '@emotion/styled';\r\n\r\nexport const DepartmentListHeader = styled.div`\r\n  font-size: 20px;\r\n  font-weight: 700;\r\n  text-align: center;\r\n  border-radius: 5px;\r\n  text-align: center;\r\n  padding-top: 20px;\r\n`;\r\n\r\nexport const DepartmentList = styled.ul`\r\n  display: flex;\r\n  justify-content: center;\r\n  list-style: none;\r\n  flex-wrap: wrap;\r\n  padding: 0;\r\n`;\r\n\r\nexport const DepartmentListItem = styled.li`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: flex-start;\r\n  align-items: center;\r\n\r\n  width: 130px;\r\n  height: 250px;\r\n  border: 1px solid #cc0101;\r\n  padding: 5px;\r\n\r\n  text-align: center;\r\n  border-radius: 5px;\r\n  margin: 5px;\r\n\r\n  font-size: 12px;\r\n  font-weight: 500;\r\n  background-color: #fff;\r\n\r\n  &:last-of-type {\r\n    margin-bottom: 0;\r\n  }\r\n\r\n  @media screen and (min-width: 900px) {\r\n    margin: 15px;\r\n    width: 200px;\r\n    height: 350px;\r\n  }\r\n`;\r\n\r\nexport const DescriptionCityItem = styled.div`\r\n  font-size: 14px;\r\n  margin-bottom: 5px;\r\n  color: #8b0000;\r\n\r\n  @media screen and (min-width: 900px) {\r\n    font-size: 20px;\r\n  }\r\n`;\r\n\r\nexport const DescriptionItem = styled.div`\r\n  display: flex;\r\n  justify-content: flex-start;\r\n  align-items: center;\r\n  height: 80px;\r\n  border: 1px solid #cc0101;\r\n  border-radius: 10px;\r\n  margin-bottom: 5px;\r\n  padding: 5px;\r\n  @media screen and (min-width: 900px) {\r\n    font-size: 16px;\r\n    margin-bottom: 10px;\r\n    padding: 10px;\r\n    height: 100px;\r\n  }\r\n`;\r\n\r\nexport const ScheduleItem = styled.div`\r\n  font-size: 12px;\r\n  font-weight: 500;\r\n  @media screen and (min-width: 900px) {\r\n    font-size: 16px;\r\n  }\r\n`;\r\n\r\nexport const ScheduleHeader = styled.div`\r\n  font-size: 14px;\r\n  margin-bottom: 5px;\r\n  color: #8b0000;\r\n  @media screen and (min-width: 900px) {\r\n    font-size: 20px;\r\n  }\r\n`;\r\n\r\nexport const LoadMoreButton = styled.button`\r\n  width: 150px;\r\n  height: 40px;\r\n  background-color: #5d5e5e;\r\n  color: #fff;\r\n  border: none;\r\n  border-radius: 5px;\r\n  font-size: 14px;\r\n  font-weight: 700;\r\n  cursor: pointer;\r\n\r\n  transition: all 0.3s linear;\r\n\r\n  &:hover,\r\n  &:focus {\r\n    background-color: #b11b1b;\r\n  }\r\n`;\r\n\r\nexport const ButtonWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n","import { nanoid } from 'nanoid';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n  selectDepartmentsList,\r\n  selectDepartmentsError,\r\n  selectPage,\r\n  selectTotalCount,\r\n} from 'redux/selectors';\r\n\r\nimport {\r\n  DepartmentListHeader,\r\n  DepartmentList,\r\n  DepartmentListItem,\r\n  DescriptionItem,\r\n  ScheduleItem,\r\n  DescriptionCityItem,\r\n  ScheduleHeader,\r\n  LoadMoreButton,\r\n  ButtonWrapper,\r\n} from 'components/DepartmentsListResult/DepartmentsListResult.styled';\r\nimport { updatePage } from 'redux/slice';\r\n\r\nexport const DepartmentsListResult = () => {\r\n  const listOfDepartments = useSelector(selectDepartmentsList);\r\n  const departmentsError = useSelector(selectDepartmentsError);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const page = useSelector(selectPage);\r\n  const totalCount = useSelector(selectTotalCount);\r\n\r\n  const onLoadMore = () => {\r\n    dispatch(updatePage(page + 1));\r\n  };\r\n  return (\r\n    <ButtonWrapper>\r\n      {departmentsError ? (\r\n        <DepartmentListHeader>Такого міста немає у списку</DepartmentListHeader>\r\n      ) : (\r\n        <DepartmentList>\r\n          {listOfDepartments.map(item => (\r\n            <DepartmentListItem key={nanoid()}>\r\n              <DescriptionCityItem>{item.CityDescription}</DescriptionCityItem>\r\n              <DescriptionItem>{item.Description}</DescriptionItem>\r\n              <ScheduleHeader>Розклад роботи</ScheduleHeader>\r\n              <ScheduleItem>Пн {item.Schedule.Monday}</ScheduleItem>\r\n              <ScheduleItem>Вт {item.Schedule.Tuesday}</ScheduleItem>\r\n              <ScheduleItem>Ср {item.Schedule.Wednesday}</ScheduleItem>\r\n              <ScheduleItem>Чт {item.Schedule.Thursday}</ScheduleItem>\r\n              <ScheduleItem>Пт {item.Schedule.Friday}</ScheduleItem>\r\n              <ScheduleItem>Сб {item.Schedule.Saturday}</ScheduleItem>\r\n              <ScheduleItem>Вс {item.Schedule.Sunday}</ScheduleItem>\r\n            </DepartmentListItem>\r\n          ))}\r\n        </DepartmentList>\r\n      )}\r\n      {totalCount !== listOfDepartments.length &&\r\n        !!listOfDepartments.length && (\r\n          <div>\r\n            <LoadMoreButton type=\"submit\" onClick={onLoadMore}>\r\n              Більше відділень\r\n            </LoadMoreButton>\r\n          </div>\r\n        )}\r\n    </ButtonWrapper>\r\n  );\r\n};\r\n","import { DepartmentsForm } from 'components/DepartmentsForm/DepartmentsForm';\r\nimport { DepartmentsListResult } from 'components/DepartmentsListResult/DepartmentsListResult';\r\nimport { Loader } from 'components/Loader/Loader';\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport { selectIsLoading } from 'redux/selectors';\r\n\r\nexport default function DepartmentList() {\r\n  const isLoading = useSelector(selectIsLoading);\r\n  return (\r\n    <>\r\n      <DepartmentsForm />\r\n      {isLoading ? <Loader /> : <DepartmentsListResult />}\r\n    </>\r\n  );\r\n}\r\n","export const selectInfo = state => state.info.ttnInfo;\r\n\r\nexport const selectError = state => state.info.infoError;\r\n\r\nexport const selectNumbersList = state => state.info.ttnNumbersList;\r\n\r\nexport const selectSelectedNumber = state => state.info.selectedNumber;\r\n\r\nexport const selectDepartmentsList = state => state.info.departmentsList;\r\n\r\nexport const selectDepartmentsError = state => state.info.departmentsError;\r\n\r\nexport const selectPage = state => state.info.page;\r\n\r\nexport const selectCity = state => state.info.city;\r\n\r\nexport const selectTotalCount = state => state.info.totalCount;\r\n\r\nexport const selectIsLoading = state => state.info.isLoading;\r\n"],"names":["Spinner","styled","Loader","height","width","color","ariaLabel","wrapperStyle","wrapperClass","visible","FormEl","Form","InputWrapper","InputEl","Field","SubmitButton","Error","ErrorMessage","InfoError","props","error","ErrorMessageDepartment","schema","yup","shape","cityName","min","max","matches","required","initialValues","DepartmentsForm","dispatch","useDispatch","page","useSelector","selectPage","city","selectCity","useEffect","fetchDepartments","updateCity","clearDepartmentsList","validationSchema","onSubmit","values","type","name","placeholder","component","DepartmentListHeader","DepartmentList","DepartmentListItem","DescriptionCityItem","DescriptionItem","ScheduleItem","ScheduleHeader","LoadMoreButton","ButtonWrapper","DepartmentsListResult","listOfDepartments","selectDepartmentsList","departmentsError","selectDepartmentsError","totalCount","selectTotalCount","map","item","CityDescription","Description","Schedule","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday","Sunday","nanoid","length","onClick","updatePage","isLoading","selectIsLoading","selectInfo","state","info","ttnInfo","selectError","infoError","selectNumbersList","ttnNumbersList","selectSelectedNumber","selectedNumber","departmentsList"],"sourceRoot":""}
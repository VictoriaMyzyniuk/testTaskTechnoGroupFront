{"version":3,"file":"static/js/967.39d5b6dd.chunk.js","mappings":"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","sources":["components/Loader/Loader.styled.jsx","components/Loader/Loader.jsx","components/SearchForm/SearchForm.styled.jsx","components/InfoCard/InfoCard.styled.jsx","components/InfoCard/InfoCard.jsx","components/RequestHistory/RequestHistory.styled.jsx","components/RequestHistory/RequestHistory.jsx","components/SearchForm/SearchForm.jsx","pages/CheckTtn/CheckTtn.styled.jsx","pages/CheckTtn/CheckTtn.jsx","redux/selectors.js"],"sourcesContent":["import styled from '@emotion/styled';\r\n\r\nexport const Spinner = styled.div`\r\n  position: fixed;\r\n  top: 0;\r\n  right: 0;\r\n  width: 100vw;\r\n  height: 100vh;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  backdrop-filter: invert(15%);\r\n`;\r\n","import { Circles } from 'react-loader-spinner';\r\nimport { Spinner } from 'components/Loader/Loader.styled';\r\nexport const Loader = () => {\r\n  return (\r\n    <Spinner>\r\n      <Circles\r\n        height=\"80\"\r\n        width=\"80\"\r\n        color=\"#ae0000\"\r\n        ariaLabel=\"circles-loading\"\r\n        wrapperStyle={{}}\r\n        wrapperClass=\"\"\r\n        visible={true}\r\n      />\r\n    </Spinner>\r\n  );\r\n};\r\n","import styled from '@emotion/styled';\r\nimport { Form, Field, ErrorMessage } from 'formik';\r\n\r\nexport const FormEl = styled(Form)`\r\n  display: flex;\r\n  align-items: center;\r\n  flex-direction: column;\r\n  margin-top: 20px;\r\n\r\n  @media screen and (min-width: 900px) {\r\n    flex-direction: row;\r\n    justify-content: center;\r\n    align-items: flex-start;\r\n  }\r\n`;\r\n\r\nexport const InputWrapper = styled.div`\r\n  min-height: 74px;\r\n  display: flex;\r\n  justify-content: flex-start;\r\n  align-items: center;\r\n  flex-direction: column;\r\n`;\r\n\r\nexport const InputEl = styled(Field)`\r\n  font-size: 16px;\r\n  width: 250px;\r\n  height: 20px;\r\n  padding: 5px;\r\n  border-radius: 5px;\r\n  outline-color: #bb3d3d;\r\n  border-color: #ab0a0a;\r\n  font-weight: 700;\r\n  outline: none;\r\n\r\n  @media screen and (min-width: 900px) {\r\n    height: 26px;\r\n    margin-bottom: 4px;\r\n  }\r\n`;\r\n\r\nexport const SubmitButton = styled.button`\r\n  width: 150px;\r\n  height: 40px;\r\n  background-color: #5d5e5e;\r\n  border: none;\r\n  border-radius: 5px;\r\n  font-size: 14px;\r\n  font-weight: 700;\r\n  cursor: pointer;\r\n  color: #ffffff;\r\n\r\n  padding: 5px;\r\n  transition: all 0.3s linear;\r\n\r\n  &:hover,\r\n  &:focus {\r\n    background-color: #b11b1b;\r\n  }\r\n`;\r\n\r\nexport const Error = styled(ErrorMessage)`\r\n  width: 300px;\r\n  text-align: center;\r\n  color: red;\r\n\r\n  font-weight: 500;\r\n  font-size: 12px;\r\n`;\r\n\r\nexport const InfoError = styled.div`\r\n  width: 300px;\r\n  text-align: center;\r\n\r\n  margin-bottom: 1px;\r\n  font-weight: 500;\r\n  font-size: 12px;\r\n  color: ${props => {\r\n    return props.error ? 'red' : 'transparent';\r\n  }};\r\n`;\r\n","import styled from '@emotion/styled';\r\n\r\nexport const InfoWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  margin-top: 25px;\r\n\r\n  @media screen and (min-width: 900px) {\r\n    align-items: flex-start;\r\n    margin-top: 0;\r\n  }\r\n`;\r\n\r\nexport const InfoEl = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: flex-start;\r\n\r\n  width: 280px;\r\n  height: 80px;\r\n  font-weight: 700;\r\n  color: #cccccc;\r\n  font-size: 16px;\r\n  border-radius: 10px;\r\n  text-align: center;\r\n  margin-bottom: 10px;\r\n  padding: 5px;\r\n  background: linear-gradient(180deg, #cb0000, #fff);\r\n  background-repeat: no-repeat;\r\n  background-size: cover;\r\n  height: 100%;\r\n\r\n  &:last-of-type {\r\n    margin-bottom: 0;\r\n  }\r\n\r\n  @media screen and (min-width: 900px) {\r\n    width: 450px;\r\n    height: 120px;\r\n    font-size: 20px;\r\n    margin-bottom: 20px;\r\n    padding: 10px;\r\n  }\r\n`;\r\n\r\nexport const InfoElContent = styled.div`\r\n  font-weight: 500;\r\n  font-size: 14px;\r\n  color: black;\r\n  padding: 2px;\r\n\r\n  @media screen and (min-width: 900px) {\r\n    font-size: 16px;\r\n    padding: 10px;\r\n  }\r\n`;\r\n","import { useSelector } from 'react-redux';\r\nimport { selectInfo } from 'redux/selectors';\r\n\r\nimport {\r\n  InfoWrapper,\r\n  InfoEl,\r\n  InfoElContent,\r\n} from 'components/InfoCard/InfoCard.styled';\r\n\r\nexport const InfoCard = () => {\r\n  const cargoInfo = useSelector(selectInfo);\r\n\r\n  const {\r\n    Status,\r\n    StatusCode,\r\n    WarehouseRecipient,\r\n    WarehouseSender,\r\n    CitySender,\r\n    CityRecipient,\r\n  } = cargoInfo;\r\n  return (\r\n    <InfoWrapper>\r\n      <InfoEl>\r\n        Статус доставки:\r\n        {StatusCode === '3' ? (\r\n          <InfoElContent>\r\n            Номер ТТН не знайдено. Перевірте номер та спробуйте ще раз\r\n          </InfoElContent>\r\n        ) : (\r\n          <InfoElContent>{Status}</InfoElContent>\r\n        )}\r\n      </InfoEl>\r\n      <InfoEl>\r\n        Відправлено:\r\n        <InfoElContent>\r\n          {WarehouseSender}\r\n          <br />\r\n          Населений пункт: {CitySender}\r\n        </InfoElContent>\r\n      </InfoEl>\r\n      <InfoEl>\r\n        Отримано:\r\n        <InfoElContent>\r\n          {WarehouseRecipient}\r\n          <br />\r\n          Населений пункт: {CityRecipient}\r\n        </InfoElContent>\r\n      </InfoEl>\r\n    </InfoWrapper>\r\n  );\r\n};\r\n","import styled from '@emotion/styled';\r\n\r\nexport const ListWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  padding-top: 20px;\r\n\r\n  @media screen and (min-width: 900px) {\r\n    margin-left: 70px;\r\n    padding-top: 0;\r\n    justify-content: flex-start;\r\n  }\r\n`;\r\n\r\nexport const ListHeader = styled.div`\r\n  width: 150px;\r\n  font-size: 16px;\r\n  font-weight: 700;\r\n  text-align: center;\r\n  border-radius: 5px;\r\n\r\n  @media screen and (min-width: 900px) {\r\n    font-size: 20px;\r\n  }\r\n`;\r\n\r\nexport const ListEl = styled.ul`\r\n  list-style: none;\r\n  flex-wrap: wrap;\r\n  gap: 10px;\r\n  padding: 0;\r\n  height: 175px;\r\n\r\n  overflow-y: ${props => {\r\n    return props.requestHistory.length > 5 ? 'scroll' : 'hidden';\r\n  }};\r\n  @media screen and (min-width: 900px) {\r\n    height: 315px;\r\n    overflow-y: ${props => {\r\n      return props.requestHistory.length > 9 ? 'scroll' : 'hidden';\r\n    }};\r\n  }\r\n`;\r\n\r\nexport const ListItem = styled.li`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 180px;\r\n  border: 1px solid #ff0000;\r\n  padding: 5px;\r\n  text-align: center;\r\n  border-radius: 5px;\r\n  margin-bottom: 5px;\r\n  font-weight: 500;\r\n\r\n  background-color: #eb9a9a;\r\n  cursor: pointer;\r\n  transition: all 0.3s linear;\r\n\r\n  &:hover {\r\n    background-color: #fff;\r\n  }\r\n\r\n  &:last-of-type {\r\n    margin-bottom: 0;\r\n  }\r\n`;\r\n\r\nexport const ClearButton = styled.button`\r\n  width: 150px;\r\n  height: 40px;\r\n  background-color: #5d5e5e;\r\n  border: none;\r\n  border-radius: 5px;\r\n  font-size: 14px;\r\n  font-weight: 700;\r\n  cursor: pointer;\r\n  color: #fff;\r\n\r\n  transition: all 0.3s linear;\r\n\r\n  &:hover,\r\n  &:focus {\r\n    background-color: #fff;\r\n  }\r\n`;\r\n","import { updateSelectedNumber, clearRequestHistory } from 'redux/slice';\r\nimport { selectNumbersList } from 'redux/selectors';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { fetchInfo } from 'redux/operations';\r\nimport { nanoid } from 'nanoid';\r\n\r\nimport {\r\n  ListWrapper,\r\n  ListHeader,\r\n  ListEl,\r\n  ListItem,\r\n  ClearButton,\r\n} from 'components/RequestHistory/RequestHistory.styled';\r\n\r\nexport const RequestHistory = () => {\r\n  const requestHistory = useSelector(selectNumbersList);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const clearHistory = () => {\r\n    dispatch(clearRequestHistory());\r\n  };\r\n\r\n  const handleClick = clickedNumber => {\r\n    dispatch(updateSelectedNumber(clickedNumber));\r\n\r\n    dispatch(fetchInfo(clickedNumber));\r\n  };\r\n  return (\r\n    <ListWrapper>\r\n      <ListHeader>Історія пошуку</ListHeader>\r\n      <ListEl requestHistory={requestHistory}>\r\n        {requestHistory.map(item => {\r\n          return (\r\n            <ListItem key={nanoid()}>\r\n              <div\r\n                onClick={() => {\r\n                  handleClick(item);\r\n                }}\r\n              >\r\n                {item}\r\n              </div>\r\n            </ListItem>\r\n          );\r\n        })}\r\n      </ListEl>\r\n      {requestHistory.length !== 0 && (\r\n        <ClearButton\r\n          type=\"button\"\r\n          onClick={() => {\r\n            clearHistory();\r\n          }}\r\n        >\r\n          Очистити історію\r\n        </ClearButton>\r\n      )}\r\n    </ListWrapper>\r\n  );\r\n};\r\n","import { useDispatch, useSelector } from 'react-redux';\r\nimport { fetchInfo } from 'redux/operations';\r\nimport { selectError, selectSelectedNumber } from 'redux/selectors';\r\n\r\nimport { Formik, useFormikContext } from 'formik';\r\n\r\nimport {\r\n  FormEl,\r\n  InputEl,\r\n  SubmitButton,\r\n  Error,\r\n  InfoError,\r\n  InputWrapper,\r\n} from 'components/SearchForm/SearchForm.styled';\r\n\r\nimport * as yup from 'yup';\r\nimport { useEffect } from 'react';\r\n\r\nconst schema = yup.object().shape({\r\n  ttnNumber: yup\r\n    .string()\r\n    .matches(/^\\d{14}$/, 'Введіть 14 цифр')\r\n    .required(\"Поле обов'язкове для заповнення\"),\r\n});\r\n\r\nconst initialValues = {\r\n  ttnNumber: '',\r\n};\r\n\r\nconst TtnInput = () => {\r\n  const { setFieldValue } = useFormikContext();\r\n\r\n  const ttnSelectedNumber = useSelector(selectSelectedNumber);\r\n\r\n  useEffect(() => {\r\n    setFieldValue('ttnNumber', ttnSelectedNumber);\r\n  }, [ttnSelectedNumber, setFieldValue]);\r\n\r\n  return (\r\n    <>\r\n      <InputEl type=\"text\" name=\"ttnNumber\" placeholder=\"Введіть номер ТТН\" />\r\n      <Error name=\"ttnNumber\" component=\"div\" />\r\n    </>\r\n  );\r\n};\r\n\r\nexport const SearchForm = () => {\r\n  const dispatch = useDispatch();\r\n  let error = useSelector(selectError);\r\n\r\n  const handleSubmit = values => {\r\n    dispatch(fetchInfo(values.ttnNumber));\r\n  };\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={initialValues}\r\n      validationSchema={schema}\r\n      onSubmit={handleSubmit}\r\n    >\r\n      <FormEl>\r\n        <InputWrapper>\r\n          <TtnInput />\r\n          <InfoError error={error}>Невірний номер ТТН</InfoError>\r\n        </InputWrapper>\r\n        <SubmitButton type=\"submit\">Отримати статус</SubmitButton>\r\n      </FormEl>\r\n    </Formik>\r\n  );\r\n};\r\n","import styled from '@emotion/styled';\r\n\r\nexport const InfoWrapper = styled.div`\r\n  @media screen and (min-width: 900px) {\r\n    display: flex;\r\n    justify-content: center;\r\n    padding-top: 30px;\r\n  }\r\n`;\r\n","import { InfoCard } from 'components/InfoCard/InfoCard';\r\nimport { RequestHistory } from 'components/RequestHistory/RequestHistory';\r\nimport { SearchForm } from 'components/SearchForm/SearchForm';\r\n\r\nimport { InfoWrapper } from 'pages/CheckTtn/CheckTtn.styled';\r\nimport { Loader } from 'components/Loader/Loader';\r\n\r\nimport { selectIsLoading } from 'redux/selectors';\r\nimport { useSelector } from 'react-redux';\r\n\r\nexport default function CheckTtn() {\r\n  const isLoading = useSelector(selectIsLoading);\r\n  return (\r\n    <>\r\n      <SearchForm />\r\n      {isLoading ? (\r\n        <Loader />\r\n      ) : (\r\n        <InfoWrapper>\r\n          <InfoCard />\r\n          <RequestHistory />\r\n        </InfoWrapper>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","export const selectInfo = state => state.info.ttnInfo;\r\n\r\nexport const selectError = state => state.info.infoError;\r\n\r\nexport const selectNumbersList = state => state.info.ttnNumbersList;\r\n\r\nexport const selectSelectedNumber = state => state.info.selectedNumber;\r\n\r\nexport const selectDepartmentsList = state => state.info.departmentsList;\r\n\r\nexport const selectDepartmentsError = state => state.info.departmentsError;\r\n\r\nexport const selectPage = state => state.info.page;\r\n\r\nexport const selectCity = state => state.info.city;\r\n\r\nexport const selectTotalCount = state => state.info.totalCount;\r\n\r\nexport const selectIsLoading = state => state.info.isLoading;\r\n"],"names":["Spinner","styled","Loader","height","width","color","ariaLabel","wrapperStyle","wrapperClass","visible","FormEl","Form","InputWrapper","InputEl","Field","SubmitButton","Error","ErrorMessage","InfoError","props","error","InfoWrapper","InfoEl","InfoElContent","InfoCard","cargoInfo","useSelector","selectInfo","Status","StatusCode","WarehouseRecipient","WarehouseSender","CitySender","CityRecipient","ListWrapper","ListHeader","ListEl","requestHistory","length","ListItem","ClearButton","RequestHistory","selectNumbersList","dispatch","useDispatch","map","item","onClick","clickedNumber","updateSelectedNumber","fetchInfo","nanoid","type","clearRequestHistory","schema","yup","shape","ttnNumber","matches","required","initialValues","TtnInput","setFieldValue","useFormikContext","ttnSelectedNumber","selectSelectedNumber","useEffect","name","placeholder","component","SearchForm","selectError","validationSchema","onSubmit","values","CheckTtn","isLoading","selectIsLoading","state","info","ttnInfo","infoError","ttnNumbersList","selectedNumber","selectDepartmentsList","departmentsList","selectDepartmentsError","departmentsError","selectPage","page","selectCity","city","selectTotalCount","totalCount"],"sourceRoot":""}